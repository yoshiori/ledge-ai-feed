name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt, clippy
        
    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-test-
          ${{ runner.os }}-cargo-
          
    - name: Check code formatting
      run: cargo fmt --all -- --check
      
    - name: Run clippy lints
      run: cargo clippy --all-targets --all-features
      
    - name: Run tests
      run: cargo test --verbose
      
    - name: Check that code compiles
      run: cargo check --verbose
      
    - name: Build in release mode
      run: cargo build --release --verbose

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        
    - name: Install cargo-tarpaulin
      run: |
        cargo install cargo-tarpaulin || echo "Failed to install cargo-tarpaulin, skipping coverage"
      
    - name: Generate code coverage
      run: |
        if command -v cargo-tarpaulin &> /dev/null; then
          cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml || echo "Coverage generation failed"
        else
          echo "cargo-tarpaulin not available, skipping coverage"
        fi
      
    - name: Upload coverage to Codecov
      if: hashFiles('cobertura.xml') != ''
      uses: codecov/codecov-action@v4
      with:
        file: ./cobertura.xml
        fail_ci_if_error: false

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        
    - name: Install cargo-audit
      run: |
        cargo install cargo-audit || echo "Failed to install cargo-audit, skipping security audit"
      
    - name: Run security audit
      run: |
        if command -v cargo-audit &> /dev/null; then
          cargo audit || echo "Security audit failed"
        else
          echo "cargo-audit not available, skipping security audit"
        fi

  minimal-versions:
    name: Minimal Versions Check
    runs-on: ubuntu-latest
    continue-on-error: true  # Allow this job to fail without breaking CI
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev pkg-config
      
    - name: Install Rust toolchain (nightly for -Z minimal-versions)
      uses: dtolnay/rust-toolchain@nightly
      
    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      
    - name: Generate minimal versions Cargo.lock
      run: cargo +nightly update -Z minimal-versions
      
    - name: Test with minimal versions
      run: cargo +stable test